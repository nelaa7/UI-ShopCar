/*! @oneaudi/audi-core-polyfills 7.0.1 - Mon, 14 Aug 2023 08:40:36 GMT
License information can be found in audi-polyfill-loading.js.LICENSE.txt */
!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("core-polyfill-loading",[],t):"object"==typeof exports?exports["core-polyfill-loading"]=t():e["core-polyfill-loading"]=t()}(self,(()=>(()=>{"use strict";var e={d:(t,r)=>{for(var i in r)e.o(r,i)&&!e.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:r[i]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{imageLoadingPolyfill:()=>i});class r{constructor(){if(r._instance)return r._instance;this._initialize(),r._instance=this}_initialize(){this.registeredEvents=[],this.intersectionObserver=this._createIntersectionObserver(),this._applyPolyfill=this._applyPolyfill.bind(this),this._onIntersection=this._onIntersection.bind(this),this._applyPolyfill()}static _isSafariBrowser(){const e=navigator.userAgent.toLowerCase();return-1!==e.indexOf("safari")&&!(e.indexOf("chrome")>-1)}static _delay=this._isSafariBrowser()?100:0;_createIntersectionObserver(){const e={lazyloadImage:'img[loading="lazy"]',rootMargin:"0px 0px 256px 0px",threshold:.01};if("IntersectionObserver"in window)return new IntersectionObserver(this._onIntersection,e)}_onIntersection(e,t){e.forEach((function(e){if(0===e.intersectionRatio)return;const i=e.target;t.unobserve(i),r._setImageSource(i)}))}static _setImageSource(e){r._setPictureSources(e),setTimeout((()=>{e.dataset.srcset&&(e.srcset=e.dataset.srcset),e.dataset.src&&(e.src=e.dataset.src)}),this._delay)}static _setPictureSources(e){if(e.parentNode&&"picture"===e.parentNode.tagName.toLowerCase()){const t=e.parentNode.querySelectorAll("source");Array.prototype.slice.call(t).forEach((function(e){e.dataset.srcset&&(e.srcset=e.dataset.srcset)}))}}_applyPolyfill(e){const t=e&&e.element?e.element:document,i=t.querySelectorAll('img[loading="lazy"]'),s=Array.prototype.slice.call(i),n=t.querySelectorAll('img[loading="eager"]'),o=Array.prototype.slice.call(n),a=this._isIntersectionObserverAvailable(),l=this._isScrollingPossible();if(a&&l){const e=this;s.forEach((function(t){e._observeWithIntersectionObserver(t)})),o.forEach((function(e){r._setImageSource(e)})),this._enablePrintingFallback(s)}else r._setAllImageSources(s),r._setAllImageSources(o)}_isIntersectionObserverAvailable(){return void 0!==this.intersectionObserver}_isScrollingPossible(){return void 0!==window.onscroll}_observeWithIntersectionObserver(e){this.intersectionObserver.observe(e)}_enablePrintingFallback(e){const t=window.matchMedia("print");this._handlePrintingFallback=this._handlePrintingFallback.bind(e),t.addListener(this._handlePrintingFallback)}_handlePrintingFallback(e){const t=this;e.matches&&r._setAllImageSources(t)}static _setAllImageSources(e){e.forEach((function(e){r._setImageSource(e)}))}registerCustomEvent(e){-1===this.registeredEvents.indexOf(e)&&(this.registeredEvents.push(e),document.addEventListener(e,this._applyPolyfill))}}const i=new r;return i.registerCustomEvent("PAGE_LOADED"),i.registerCustomEvent("LAYER_LOADED"),i.registerCustomEvent("ONELAYER_LOADED"),i.registerCustomEvent("content_rendered"),t})()));
//# sourceMappingURL=audi-polyfill-loading.js.map